{
    "openapi": "3.0.0",
    "info": {
        "title": "APIS Users Manager",
        "contact": {
            "name": "Support Cassius Lc",
            "email": "cassiuslc.dev@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "Base URL da API"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logs in a user",
                "description": "Get a JWT via given credentials.",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Login"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get current user",
                "description": "Returns the details of the currently authenticated user",
                "operationId": "me",
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out",
                "description": "Logs out the user by invalidating the token",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh token",
                "description": "Refreshes the JWT token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "New JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Token"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "required": [
                    "id",
                    "name",
                    "email"
                ],
                "properties": {
                    "id": {
                        "description": "The user's id",
                        "type": "integer"
                    },
                    "name": {
                        "description": "The user's name",
                        "type": "string"
                    },
                    "cpf": {
                        "description": "The user's CPF",
                        "type": "string"
                    },
                    "email": {
                        "description": "The user's email",
                        "type": "string"
                    },
                    "email_verified_at": {
                        "description": "The timestamp when the user's email was verified",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "The timestamp when the user was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "The timestamp when the user was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Login": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "description": "User's email address",
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "description": "User's password",
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "Token": {
                "description": "The structure of the token response.",
                "properties": {
                    "access_token": {
                        "description": "The access token value.",
                        "type": "string"
                    },
                    "token_type": {
                        "description": "The type of the token. Should be 'bearer' (JWT).",
                        "type": "string",
                        "example": "bearer"
                    },
                    "expires_in": {
                        "description": "The number of seconds until the token expires.",
                        "type": "integer"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Operações relacionadas à autenticação do usuário"
        }
    ],
    "externalDocs": {
        "description": "GitHub Repository",
        "url": "https://github.com/cassiuslc/Users-Manager"
    }
}